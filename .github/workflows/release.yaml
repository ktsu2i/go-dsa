name: release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create-release-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TZ: "Asia/Tokyo"

    steps:
      - uses: actions/checkout@v4

      # Release tag format: YYYY.MM.DD
      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          echo "release_tag=$today" >> $GITHUB_OUTPUT

      - name: Generate release note changes
        id: changes
        run: |
          echo "changes=$(
          curl -X POST \
            -H 'Accept: application/vnd.github.v3+json' \
            -H 'Authorization: token $GITHUB_TOKEN' \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d '{
              "tag_name": "${{ steps.release_tag.outputs.release_tag }}",
              "target_commitish": "main"
            }' | jq .body
          )" >> $GITHUB_OUTPUT

      - name: Create release note body
        id: release_note_body
        run: |
          echo "release_note_body=$(echo \
            ${{ steps.changes.outputs.changes }} \
            | sed 's/\\"//g' | sed 's/["â€œ]//g')" >> $GITHUB_OUTPUT
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'

      - name: Build
        run: go build ./...

      - name: Test
        run: go test ./...

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          release_name: Release ${{ steps.release_tag.outputs.release_tag }}
          body: ${{ steps.release_note_body.outputs.release_note_body }}
          draft: true
          prerelease: false
